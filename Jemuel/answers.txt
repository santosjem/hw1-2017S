Jemuel Santos
1. Given a DOS-formatted text file (lines end with \r\n rather than just \n), convert it to a standard text file.
To convert a DOS-formatted text to a standard text file, use:
sed 's/.$//'
Source: http://sed.sourceforge.net/sed1line.txt

2. Given a standard text file, convert all uppercase letters to lowercase.
To convert all uppercase letters to lower case, use:
tr '[:upper:]' '[:lower:]' < input.txt > output.txt
Source: https://www.cyberciti.biz/faq/linux-unix-shell-programming-converting-lowercase-uppercase/

3. Given a standard text file, remove all blank spaces at the end of lines.
To remove all blank spaces at the end of lines, use:
sed 's/ *$//' file
Source: http://stackoverflow.com/questions/20521857/remove-white-space-from-the-end-of-line-in-linux

4. Make a list of all misspelled words in a text file.
To make a list of all misspeled words in a text file, use:
cat example.txt | aspell -a
Source: http://superuser.com/questions/895552/how-can-i-get-a-list-of-all-misspelled-words-in-a-text-using-linux

5. Given a CSV file in which each line has the form
LastName,FirstName,Assignment,NumericGrade 
find the the five highest grades on homework 2.


6. Given an HTML file, find the URLs of all images. In case you don’t know HTML, those will typically look like 
<img ... src="*URL*" ...>
The img can have any capitalization (img, IMG, Img, iMg, etc.)
There can be other text between the img and the src. (That text cannot include a greater than sign.)
You may find it easier to start this problem by assuming that there’s only one image tag on a line.
To find the URLs of all images, use:
grep -o '"http://[^"]*"' myfile.html
Source: http://unix.stackexchange.com/questions/56675/how-can-i-use-awk-to-extract-urls-from-a-html-file
